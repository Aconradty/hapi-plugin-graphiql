diff --git a/css/doc-explorer.css b/css/doc-explorer.css
index 511297a..a9b9fd8 100644
--- a/css/doc-explorer.css
+++ b/css/doc-explorer.css
@@ -66,6 +66,20 @@
   top: 47px;
 }
 
+.graphiql-container .doc-type-kind {
+  border-bottom: 1px solid #e0e0e0;
+  color: #777;
+  cursor: default;
+  font-size: 20px;
+  font-variant: small-caps;
+  font-weight: bold;
+  letter-spacing: 1px;
+  margin: 0 -15px 10px 0;
+  padding: 10px 0;
+  -webkit-user-select: none;
+          user-select: none;
+}
+
 .graphiql-container .doc-type-description p:first-child ,
 .graphiql-container .doc-type-description blockquote:first-child {
   margin-top: 0;
* Unmerged path package.json
diff --git a/src/components/DocExplorer.js b/src/components/DocExplorer.js
index e46869d..8902425 100644
--- a/src/components/DocExplorer.js
+++ b/src/components/DocExplorer.js
@@ -101,6 +101,7 @@ export class DocExplorer extends React.Component {
         <FieldDoc
           field={navItem.def}
           onClickType={this.handleClickTypeOrField}
+          schema={schema}
         />;
     }
 
diff --git a/src/components/DocExplorer/FieldDoc.js b/src/components/DocExplorer/FieldDoc.js
index 828b16b..864e2bf 100644
--- a/src/components/DocExplorer/FieldDoc.js
+++ b/src/components/DocExplorer/FieldDoc.js
@@ -11,9 +11,11 @@ import React, { PropTypes } from 'react';
 import Argument from './Argument';
 import MarkdownContent from './MarkdownContent';
 import TypeLink from './TypeLink';
+import { GraphQLSchema } from 'graphql';
 
 export default class FieldDoc extends React.Component {
   static propTypes = {
+    schema: PropTypes.instanceOf(GraphQLSchema),
     field: PropTypes.object,
     onClickType: PropTypes.func,
   }
@@ -38,6 +40,8 @@ export default class FieldDoc extends React.Component {
                 <Argument arg={arg} onClickType={this.props.onClickType} />
               </div>
               <MarkdownContent
+                schema={this.props.schema}
+                onClickType={this.props.onClickType}
                 className="doc-value-description"
                 markdown={arg.description}
               />
@@ -49,13 +53,20 @@ export default class FieldDoc extends React.Component {
 
     return (
       <div>
+        <div className="doc-type-kind">
+          {'field'}
+        </div>
         <MarkdownContent
+          schema={this.props.schema}
+          onClickType={this.props.onClickType}
           className="doc-type-description"
           markdown={field.description || 'No Description'}
         />
         {
           field.deprecationReason &&
           <MarkdownContent
+            schema={this.props.schema}
+            onClickType={this.props.onClickType}
             className="doc-deprecation"
             markdown={field.deprecationReason}
           />
diff --git a/src/components/DocExplorer/MarkdownContent.js b/src/components/DocExplorer/MarkdownContent.js
index f4f08c6..50616e7 100644
--- a/src/components/DocExplorer/MarkdownContent.js
+++ b/src/components/DocExplorer/MarkdownContent.js
@@ -8,11 +8,16 @@
 
 import React, { PropTypes } from 'react';
 import Marked from 'marked';
+import { GraphQLSchema } from 'graphql';
+import TypeLink from './TypeLink';
+import htmlToReact from 'html-to-react';
 
 export default class MarkdownContent extends React.Component {
   static propTypes = {
     markdown: PropTypes.string,
     className: PropTypes.string,
+    schema: PropTypes.instanceOf(GraphQLSchema),
+    onClickType: PropTypes.func
   }
 
   shouldComponentUpdate(nextProps) {
@@ -25,12 +30,33 @@ export default class MarkdownContent extends React.Component {
       return <div />;
     }
 
-    const html = Marked(markdown, { sanitize: true });
-    return (
-      <div
-        className={this.props.className}
-        dangerouslySetInnerHTML={{ __html: html }}
-      />
-    );
+    let html = Marked(markdown, { sanitize: true });
+
+    html = `<div class="${this.props.className}">${html}</div>`
+
+    let typeMap = this.props.schema.getTypeMap();
+    let processNodeDefinitions = new htmlToReact.ProcessNodeDefinitions(React);
+    let instructions = [
+        {
+            shouldProcessNode: (node) => {
+                return node && node.name && node.name === "a";
+            },
+            processNode: (node, children, index) => {
+                let name = node.children.map((child) => child.data).join("");
+                let type = typeMap[name]
+                if (type === undefined)
+                    return processNodeDefinitions.processDefaultNode(node, children, index)
+                else
+                    return <TypeLink type={type} onClick={this.props.onClickType} />;
+            }
+        }, {
+            shouldProcessNode: (node) => true,
+            processNode: processNodeDefinitions.processDefaultNode
+        }
+    ];
+    var htmlToReactParser = new htmlToReact.Parser();
+    var markup = htmlToReactParser.parseWithInstructions(html, () => true, instructions);
+
+    return markup;
   }
 }
diff --git a/src/components/DocExplorer/SchemaDoc.js b/src/components/DocExplorer/SchemaDoc.js
index 2a2303b..7213a0d 100644
--- a/src/components/DocExplorer/SchemaDoc.js
+++ b/src/components/DocExplorer/SchemaDoc.js
@@ -32,6 +32,8 @@ export default class SchemaDoc extends React.Component {
     return (
       <div>
         <MarkdownContent
+          schema={schema}
+          onClickType={this.props.onClickType}
           className="doc-type-description"
           markdown={
             'A GraphQL schema provides a root type for each kind of operation.'
diff --git a/src/components/DocExplorer/TypeDoc.js b/src/components/DocExplorer/TypeDoc.js
index 3079cac..03568f0 100644
--- a/src/components/DocExplorer/TypeDoc.js
+++ b/src/components/DocExplorer/TypeDoc.js
@@ -156,7 +156,12 @@ export default class TypeDoc extends React.Component {
 
     return (
       <div>
+        <div className="doc-type-kind">
+          {'type'}
+        </div>
         <MarkdownContent
+          schema={this.props.schema}
+          onClickType={this.props.onClickType}
           className="doc-type-description"
           markdown={type.description || 'No Description'}
         />
@@ -203,6 +208,8 @@ function Field({ type, field, onClickType, onClickField }) {
       {
         field.deprecationReason &&
         <MarkdownContent
+          schema={this.props.schema}
+          onClickType={this.props.onClickType}
           className="doc-deprecation"
           markdown={field.deprecationReason}
         />
@@ -225,12 +232,16 @@ function EnumValue({ value }) {
         {value.name}
       </div>
       <MarkdownContent
+        schema={this.props.schema}
+        onClickType={this.props.onClickType}
         className="doc-value-description"
         markdown={value.description}
       />
       {
         value.deprecationReason &&
         <MarkdownContent
+          schema={this.props.schema}
+          onClickType={this.props.onClickType}
           className="doc-deprecation"
           markdown={value.deprecationReason}
         />
diff --git a/src/components/GraphiQL.js b/src/components/GraphiQL.js
index 037f729..be95a82 100644
--- a/src/components/GraphiQL.js
+++ b/src/components/GraphiQL.js
@@ -657,7 +657,10 @@ export class GraphiQL extends React.Component {
 
   handlePrettifyQuery = () => {
     const editor = this.getQueryEditor();
-    editor.setValue(print(parse(editor.getValue())));
+    editor.setValue(print(parse(editor.getValue()).replace(/^( +)/mg, "$1$1")));
+    const variables = JSON.stringify(JSON.parse(this.state.variables), null, 4);
+    const varEditor = this.variableEditorComponent.getCodeMirror();
+    varEditor.setValue(variables);
   }
 
   handleEditQuery = debounce(100, value => {
